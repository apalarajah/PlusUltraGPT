{"ast":null,"code":"if(module.hot){var lastHash;var upToDate=function upToDate(){return lastHash.indexOf(__webpack_hash__)>=0;};var log=require(\"./log\");var check=function check(){module.hot.check(true).then(function(updatedModules){if(!updatedModules){log(\"warning\",\"[HMR] Cannot find update. \"+(typeof window!==\"undefined\"?\"Need to do a full reload!\":\"Please reload manually!\"));log(\"warning\",\"[HMR] (Probably because of restarting the webpack-dev-server)\");if(typeof window!==\"undefined\"){window.location.reload();}return;}if(!upToDate()){check();}require(\"./log-apply-result\")(updatedModules,updatedModules);if(upToDate()){log(\"info\",\"[HMR] App is up to date.\");}}).catch(function(err){var status=module.hot.status();if([\"abort\",\"fail\"].indexOf(status)>=0){log(\"warning\",\"[HMR] Cannot apply update. \"+(typeof window!==\"undefined\"?\"Need to do a full reload!\":\"Please reload manually!\"));log(\"warning\",\"[HMR] \"+log.formatError(err));if(typeof window!==\"undefined\"){window.location.reload();}}else{log(\"warning\",\"[HMR] Update failed: \"+log.formatError(err));}});};var hotEmitter=require(\"./emitter\");hotEmitter.on(\"webpackHotUpdate\",function(currentHash){lastHash=currentHash;if(!upToDate()&&module.hot.status()===\"idle\"){log(\"info\",\"[HMR] Checking for updates on the server...\");check();}});log(\"info\",\"[HMR] Waiting for update signal from WDS...\");}else{throw new Error(\"[HMR] Hot Module Replacement is disabled.\");}","map":{"version":3,"names":["module","hot","lastHash","upToDate","indexOf","__webpack_hash__","log","require","check","then","updatedModules","window","location","reload","catch","err","status","formatError","hotEmitter","on","currentHash","Error"],"sources":["C:/Users/a_pal/AppData/Roaming/npm/node_modules/expo-cli/node_modules/webpack/hot/dev-server.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/* globals __webpack_hash__ */\nif (module.hot) {\n\t/** @type {undefined|string} */\n\tvar lastHash;\n\tvar upToDate = function upToDate() {\n\t\treturn /** @type {string} */ (lastHash).indexOf(__webpack_hash__) >= 0;\n\t};\n\tvar log = require(\"./log\");\n\tvar check = function check() {\n\t\tmodule.hot\n\t\t\t.check(true)\n\t\t\t.then(function (updatedModules) {\n\t\t\t\tif (!updatedModules) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot find update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] (Probably because of restarting the webpack-dev-server)\"\n\t\t\t\t\t);\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!upToDate()) {\n\t\t\t\t\tcheck();\n\t\t\t\t}\n\n\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\n\t\t\t\tif (upToDate()) {\n\t\t\t\t\tlog(\"info\", \"[HMR] App is up to date.\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tvar status = module.hot.status();\n\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\tlog(\n\t\t\t\t\t\t\"warning\",\n\t\t\t\t\t\t\"[HMR] Cannot apply update. \" +\n\t\t\t\t\t\t\t(typeof window !== \"undefined\"\n\t\t\t\t\t\t\t\t? \"Need to do a full reload!\"\n\t\t\t\t\t\t\t\t: \"Please reload manually!\")\n\t\t\t\t\t);\n\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\tif (typeof window !== \"undefined\") {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t}\n\t\t\t});\n\t};\n\tvar hotEmitter = require(\"./emitter\");\n\thotEmitter.on(\"webpackHotUpdate\", function (currentHash) {\n\t\tlastHash = currentHash;\n\t\tif (!upToDate() && module.hot.status() === \"idle\") {\n\t\t\tlog(\"info\", \"[HMR] Checking for updates on the server...\");\n\t\t\tcheck();\n\t\t}\n\t});\n\tlog(\"info\", \"[HMR] Waiting for update signal from WDS...\");\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n"],"mappings":"AAKA,GAAIA,MAAM,CAACC,GAAG,CAAE,CAEf,GAAI,CAAAC,QAAQ,CACZ,GAAI,CAAAC,QAAQ,CAAG,QAAS,CAAAA,QAAQA,CAAA,CAAG,CAClC,MAA8B,CAAAD,QAAQ,CAAEE,OAAO,CAACC,gBAAgB,CAAC,EAAI,CAAC,CACvE,CAAC,CACD,GAAI,CAAAC,GAAG,CAAGC,OAAO,QAAQ,CAAC,CAC1B,GAAI,CAAAC,KAAK,CAAG,QAAS,CAAAA,KAAKA,CAAA,CAAG,CAC5BR,MAAM,CAACC,GAAG,CACRO,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAAC,SAAUC,cAAc,CAAE,CAC/B,GAAI,CAACA,cAAc,CAAE,CACpBJ,GAAG,CACF,SAAS,CACT,4BAA4B,EAC1B,MAAO,CAAAK,MAAM,GAAK,WAAW,CAC3B,2BAA2B,CAC3B,yBAAyB,CAC9B,CAAC,CACDL,GAAG,CACF,SAAS,CACT,+DACD,CAAC,CACD,GAAI,MAAO,CAAAK,MAAM,GAAK,WAAW,CAAE,CAClCA,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CACzB,CACA,OACD,CAEA,GAAI,CAACV,QAAQ,CAAC,CAAC,CAAE,CAChBK,KAAK,CAAC,CAAC,CACR,CAEAD,OAAO,qBAAqB,CAAC,CAACG,cAAc,CAAEA,cAAc,CAAC,CAE7D,GAAIP,QAAQ,CAAC,CAAC,CAAE,CACfG,GAAG,CAAC,MAAM,CAAE,0BAA0B,CAAC,CACxC,CACD,CAAC,CAAC,CACDQ,KAAK,CAAC,SAAUC,GAAG,CAAE,CACrB,GAAI,CAAAC,MAAM,CAAGhB,MAAM,CAACC,GAAG,CAACe,MAAM,CAAC,CAAC,CAChC,GAAI,CAAC,OAAO,CAAE,MAAM,CAAC,CAACZ,OAAO,CAACY,MAAM,CAAC,EAAI,CAAC,CAAE,CAC3CV,GAAG,CACF,SAAS,CACT,6BAA6B,EAC3B,MAAO,CAAAK,MAAM,GAAK,WAAW,CAC3B,2BAA2B,CAC3B,yBAAyB,CAC9B,CAAC,CACDL,GAAG,CAAC,SAAS,CAAE,QAAQ,CAAGA,GAAG,CAACW,WAAW,CAACF,GAAG,CAAC,CAAC,CAC/C,GAAI,MAAO,CAAAJ,MAAM,GAAK,WAAW,CAAE,CAClCA,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CACzB,CACD,CAAC,IAAM,CACNP,GAAG,CAAC,SAAS,CAAE,uBAAuB,CAAGA,GAAG,CAACW,WAAW,CAACF,GAAG,CAAC,CAAC,CAC/D,CACD,CAAC,CAAC,CACJ,CAAC,CACD,GAAI,CAAAG,UAAU,CAAGX,OAAO,YAAY,CAAC,CACrCW,UAAU,CAACC,EAAE,CAAC,kBAAkB,CAAE,SAAUC,WAAW,CAAE,CACxDlB,QAAQ,CAAGkB,WAAW,CACtB,GAAI,CAACjB,QAAQ,CAAC,CAAC,EAAIH,MAAM,CAACC,GAAG,CAACe,MAAM,CAAC,CAAC,GAAK,MAAM,CAAE,CAClDV,GAAG,CAAC,MAAM,CAAE,6CAA6C,CAAC,CAC1DE,KAAK,CAAC,CAAC,CACR,CACD,CAAC,CAAC,CACFF,GAAG,CAAC,MAAM,CAAE,6CAA6C,CAAC,CAC3D,CAAC,IAAM,CACN,KAAM,IAAI,CAAAe,KAAK,CAAC,2CAA2C,CAAC,CAC7D"},"metadata":{},"sourceType":"script","externalDependencies":[]}