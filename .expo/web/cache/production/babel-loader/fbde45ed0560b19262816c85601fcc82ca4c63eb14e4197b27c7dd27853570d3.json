{"ast":null,"code":"import logger from\"../modules/logger/index.js\";var name=\"webpack-dev-server\";var defaultLevel=\"info\";function setLogLevel(level){logger.configureDefaultLogger({level:level});}setLogLevel(defaultLevel);var log=logger.getLogger(name);var logEnabledFeatures=function logEnabledFeatures(features){var enabledFeatures=Object.keys(features);if(!features||enabledFeatures.length===0){return;}var logString=\"Server started:\";for(var i=0;i<enabledFeatures.length;i++){var key=enabledFeatures[i];logString+=\" \".concat(key,\" \").concat(features[key]?\"enabled\":\"disabled\",\",\");}logString=logString.slice(0,-1).concat(\".\");log.info(logString);};export{log,logEnabledFeatures,setLogLevel};","map":{"version":3,"names":["logger","name","defaultLevel","setLogLevel","level","configureDefaultLogger","log","getLogger","logEnabledFeatures","features","enabledFeatures","Object","keys","length","logString","i","key","concat","slice","info"],"sources":["C:/Users/a_pal/AppData/Roaming/npm/node_modules/expo-cli/node_modules/webpack-dev-server/client/utils/log.js"],"sourcesContent":["import logger from \"../modules/logger/index.js\";\nvar name = \"webpack-dev-server\";\n// default level is set on the client side, so it does not need\n// to be set by the CLI or API\nvar defaultLevel = \"info\";\n\n// options new options, merge with old options\n/**\n * @param {false | true | \"none\" | \"error\" | \"warn\" | \"info\" | \"log\" | \"verbose\"} level\n * @returns {void}\n */\nfunction setLogLevel(level) {\n  logger.configureDefaultLogger({\n    level: level\n  });\n}\nsetLogLevel(defaultLevel);\nvar log = logger.getLogger(name);\nvar logEnabledFeatures = function logEnabledFeatures(features) {\n  var enabledFeatures = Object.keys(features);\n  if (!features || enabledFeatures.length === 0) {\n    return;\n  }\n  var logString = \"Server started:\";\n\n  // Server started: Hot Module Replacement enabled, Live Reloading enabled, Overlay disabled.\n  for (var i = 0; i < enabledFeatures.length; i++) {\n    var key = enabledFeatures[i];\n    logString += \" \".concat(key, \" \").concat(features[key] ? \"enabled\" : \"disabled\", \",\");\n  }\n  // replace last comma with a period\n  logString = logString.slice(0, -1).concat(\".\");\n  log.info(logString);\n};\nexport { log, logEnabledFeatures, setLogLevel };"],"mappings":"AAAA,MAAO,CAAAA,MAAM,kCACb,GAAI,CAAAC,IAAI,CAAG,oBAAoB,CAG/B,GAAI,CAAAC,YAAY,CAAG,MAAM,CAOzB,QAAS,CAAAC,WAAWA,CAACC,KAAK,CAAE,CAC1BJ,MAAM,CAACK,sBAAsB,CAAC,CAC5BD,KAAK,CAAEA,KACT,CAAC,CAAC,CACJ,CACAD,WAAW,CAACD,YAAY,CAAC,CACzB,GAAI,CAAAI,GAAG,CAAGN,MAAM,CAACO,SAAS,CAACN,IAAI,CAAC,CAChC,GAAI,CAAAO,kBAAkB,CAAG,QAAS,CAAAA,kBAAkBA,CAACC,QAAQ,CAAE,CAC7D,GAAI,CAAAC,eAAe,CAAGC,MAAM,CAACC,IAAI,CAACH,QAAQ,CAAC,CAC3C,GAAI,CAACA,QAAQ,EAAIC,eAAe,CAACG,MAAM,GAAK,CAAC,CAAE,CAC7C,OACF,CACA,GAAI,CAAAC,SAAS,CAAG,iBAAiB,CAGjC,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,eAAe,CAACG,MAAM,CAAEE,CAAC,EAAE,CAAE,CAC/C,GAAI,CAAAC,GAAG,CAAGN,eAAe,CAACK,CAAC,CAAC,CAC5BD,SAAS,EAAI,GAAG,CAACG,MAAM,CAACD,GAAG,CAAE,GAAG,CAAC,CAACC,MAAM,CAACR,QAAQ,CAACO,GAAG,CAAC,CAAG,SAAS,CAAG,UAAU,CAAE,GAAG,CAAC,CACvF,CAEAF,SAAS,CAAGA,SAAS,CAACI,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAACD,MAAM,CAAC,GAAG,CAAC,CAC9CX,GAAG,CAACa,IAAI,CAACL,SAAS,CAAC,CACrB,CAAC,CACD,OAASR,GAAG,CAAEE,kBAAkB,CAAEL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}