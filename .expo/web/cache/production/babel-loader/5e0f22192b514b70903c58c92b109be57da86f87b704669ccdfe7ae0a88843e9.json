{"ast":null,"code":"import getCurrentScriptSource from\"./getCurrentScriptSource.js\";function parseURL(resourceQuery){var options={};if(typeof resourceQuery===\"string\"&&resourceQuery!==\"\"){var searchParams=resourceQuery.slice(1).split(\"&\");for(var i=0;i<searchParams.length;i++){var pair=searchParams[i].split(\"=\");options[pair[0]]=decodeURIComponent(pair[1]);}}else{var scriptSource=getCurrentScriptSource();var scriptSourceURL;try{scriptSourceURL=new URL(scriptSource,self.location.href);}catch(error){}if(scriptSourceURL){options=scriptSourceURL;options.fromCurrentScript=true;}}return options;}export default parseURL;","map":{"version":3,"names":["getCurrentScriptSource","parseURL","resourceQuery","options","searchParams","slice","split","i","length","pair","decodeURIComponent","scriptSource","scriptSourceURL","URL","self","location","href","error","fromCurrentScript"],"sources":["C:/Users/a_pal/AppData/Roaming/npm/node_modules/expo-cli/node_modules/webpack-dev-server/client/utils/parseURL.js"],"sourcesContent":["import getCurrentScriptSource from \"./getCurrentScriptSource.js\";\n\n/**\n * @param {string} resourceQuery\n * @returns {{ [key: string]: string | boolean }}\n */\nfunction parseURL(resourceQuery) {\n  /** @type {{ [key: string]: string }} */\n  var options = {};\n  if (typeof resourceQuery === \"string\" && resourceQuery !== \"\") {\n    var searchParams = resourceQuery.slice(1).split(\"&\");\n    for (var i = 0; i < searchParams.length; i++) {\n      var pair = searchParams[i].split(\"=\");\n      options[pair[0]] = decodeURIComponent(pair[1]);\n    }\n  } else {\n    // Else, get the url from the <script> this file was called with.\n    var scriptSource = getCurrentScriptSource();\n    var scriptSourceURL;\n    try {\n      // The placeholder `baseURL` with `window.location.href`,\n      // is to allow parsing of path-relative or protocol-relative URLs,\n      // and will have no effect if `scriptSource` is a fully valid URL.\n      scriptSourceURL = new URL(scriptSource, self.location.href);\n    } catch (error) {\n      // URL parsing failed, do nothing.\n      // We will still proceed to see if we can recover using `resourceQuery`\n    }\n    if (scriptSourceURL) {\n      options = scriptSourceURL;\n      options.fromCurrentScript = true;\n    }\n  }\n  return options;\n}\nexport default parseURL;"],"mappings":"AAAA,MAAO,CAAAA,sBAAsB,mCAM7B,QAAS,CAAAC,QAAQA,CAACC,aAAa,CAAE,CAE/B,GAAI,CAAAC,OAAO,CAAG,CAAC,CAAC,CAChB,GAAI,MAAO,CAAAD,aAAa,GAAK,QAAQ,EAAIA,aAAa,GAAK,EAAE,CAAE,CAC7D,GAAI,CAAAE,YAAY,CAAGF,aAAa,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CACpD,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,YAAY,CAACI,MAAM,CAAED,CAAC,EAAE,CAAE,CAC5C,GAAI,CAAAE,IAAI,CAAGL,YAAY,CAACG,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CACrCH,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAGC,kBAAkB,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAChD,CACF,CAAC,IAAM,CAEL,GAAI,CAAAE,YAAY,CAAGX,sBAAsB,CAAC,CAAC,CAC3C,GAAI,CAAAY,eAAe,CACnB,GAAI,CAIFA,eAAe,CAAG,GAAI,CAAAC,GAAG,CAACF,YAAY,CAAEG,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC,CAC7D,CAAE,MAAOC,KAAK,CAAE,CAGhB,CACA,GAAIL,eAAe,CAAE,CACnBT,OAAO,CAAGS,eAAe,CACzBT,OAAO,CAACe,iBAAiB,CAAG,IAAI,CAClC,CACF,CACA,MAAO,CAAAf,OAAO,CAChB,CACA,cAAe,CAAAF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}